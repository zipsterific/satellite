---
#
# Main upstream projects here
# 
# https://github.com/RedHatSatellite/satellite-operations-collection
# https://github.com/RedHatSatellite/satellite-ansible-collection
#
- name: Satellite Installer Playbook here
  hosts: localhost
  become: true
  collections:
    - redhat.satellite_operations
    - redhat.satellite

  vars:
   # Satellite Information
    sat_user: "admin"
    sat_pass: "secret"
    sat_org: "my test"
    def_scenario: "satellite"

   # RHSM Credentials
    rhsm_username: ""
    rhsm_password: ""

    # Standard Values
    sat_version: "6.16"
    base_os: "rhel9"

    # Path to the manifest file to be used during the installation
    manifest_path: "manifest.zip"

  tasks:

    # Firewall
    - name: Disabling and Stopping firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: stopped

    # Manifest File
    - name: Copying the manifest
      ansible.builtin.copy:
        src: manifest.zip
        dest: /root/manifest.zip

    # Cleaning the subsman cache
    - name: Subscription-manager clean
      ansible.builtin.command: subscription-manager clean

    # Register to RHSM
    - name: Register to RHSM
      community.general.redhat_subscription:
        state: present
        username: "{{ rhsm_username }}"
        password: "{{ rhsm_password }}"
        force_register: yes

    # Attaching the Subscriptions
    - name: Attach the correct entitlement
      ansible.builtin.shell: |
        pool_id=$(subscription-manager list --all --available --matches="MCT3718" | grep Pool | head -n1 | awk '{print $3}') && subscription-manager attach --pool $pool_id
    - name: Attach the correct entitlement
      ansible.builtin.shell: |
        pool_id=$(subscription-manager list --all --available --matches="RH00008" | grep Pool | head -n1 | awk '{print $3}') && subscription-manager attach --pool $pool_id


    # Repositories
    - name: Disabling all the repos
      community.general.rhsm_repository:
        name: '*'
        state: disabled

    - name: Enabling the Satellite repos for Satellite 6.16 on RHEL9
      community.general.rhsm_repository:
        name: rhel-9-for-x86_64-baseos-rpms,rhel-9-for-x86_64-appstream-rpms,satellite-6.16-for-rhel-9-x86_64-rpms,satellite-maintenance-6.16-for-rhel-9-x86_64-rpms
        state: enabled
      when: sat_version == "6.16" and base_os == "rhel9"

    - name: Updating the server
      ansible.builtin.yum:
        name: '*'
        state: latest

    # Packages
    - name: Installing Satellite Package
      ansible.builtin.yum:
        name: satellite
        state: present

    # Add this here, before runing the installer
    - name: Removing puppetlabs ssl directory "/etc/puppetlabs/puppet/ssl/"
      ansible.builtin.file:
        path: /etc/puppetlabs/puppet/ssl/
        state: absent

    # Calling the installer
    # changing the call to the admin-password, adding "-initial-"
    - import_role:
        name: redhat.satellite_operations.installer
      vars:
        satellite_installer_scenario: "{{ def_scenario }}"
        satellite_installer_options:
          - '--foreman-initial-organization "{{ sat_org }}"'
          - '--foreman-initial-admin-password {{ sat_pass }}'
      when: sat_version == "6.16"

    # Importing the manifest
    - import_role:
        name: redhat.satellite.manifest
      vars:
        - satellite_organization: "{{ sat_org }}"
        - satellite_manifest_path: "/root/manifest.zip"
        - satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        - satellite_username: "{{ sat_user }}"
        - satellite_password: "{{ sat_pass }}"
      tags:
        - post

    # Refreshing the manifest
    - name: Refreshing the Manifest
      ansible.builtin.command: hammer -u "{{ sat_user }}" -p "{{ sat_pass }}" subscription refresh-manifest --organization "{{ sat_org }}"
      tags:
        - post

    # Repository actions
    - import_role:
        name: redhat.satellite.repositories
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_products:
          - name: Red Hat Enterprise Linux for x86_64
            repository_sets:
              - name: Red Hat Enterprise Linux 8 for x86_64 - BaseOS (RPMs)
                releasever: 8
              - name: Red Hat Enterprise Linux 8 for x86_64 - AppStream (RPMs)
                releasever: 8 
              - name: Red Hat Enterprise Linux 9 for x86_64 - BaseOS (RPMs)
                releasever: 9 
              - name: Red Hat Enterprise Linux 9 for x86_64 - AppStream (RPMs)
                releasever: 9 
              - name: Red Hat Satellite Client 6 for RHEL 8 x86_64 (RPMs)
              - name: Red Hat Satellite Client 6 for RHEL 9 x86_64 (RPMs)
      tags:
        - repos

    # Repository actions
    - import_role:
        name: redhat.satellite.repositories
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_products:
          - name: Red Hat Enterprise Linux Server - Extended Life Cycle Support
            repository_sets:
              - name: Red Hat Enterprise Linux 7 Server - Extended Life Cycle Support RPMs x86_64
      tags:
        - repos

    #  The call below doesn't have any "--async" feature at this moment. Keeping it commented until we get this feature done.
    - name: "Repo Sync - Red Hat Enterprise Linux for x86_64"
      redhat.satellite.repository_sync:
        username: "{{ sat_user }}"
        password: "{{ sat_pass }}"
        server_url: "https://{{ ansible_facts['nodename'] }}"
        organization: "{{ sat_org }}"
        product: "Red Hat Enterprise Linux for x86_64"
      tags:
        - repos


    #  The call below doesn't have any "--async" feature at this moment. Keeping it commented until we get this feature done.
    - name: "Repo Sync - Red Hat Enterprise Linux for x86_64"
      redhat.satellite.repository_sync:
        username: "{{ sat_user }}"
        password: "{{ sat_pass }}"
        server_url: "https://{{ ansible_facts['nodename'] }}"
        organization: "{{ sat_org }}"
        product: "Red Hat Enterprise Linux Server - Extended Life Cycle Support"
      tags:
        - repos

    # Creating a Sync Plan
    - import_role:
        name: redhat.satellite.sync_plans
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_sync_plans:
          - name: Daily Sync
            interval: daily
            # sync_date: 2020-11-07 00:00:00 UTC
            sync_date: 2020-11-07 03:00:00 PDT
            products:
              # - Red Hat Enterprise Linux Server
              - Red Hat Enterprise Linux for x86_64
      tags:
        - sync-plan

    # Creating the Lifecycle Environemnt
    - import_role:
        name: redhat.satellite.lifecycle_environments
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_lifecycle_environments:
          - name: "Previous"
            prior: "Library"
          - name: "Current"
            prior: "Previous"
      tags:
        - lifecycle

    # Creating the content view & composite content view
    - import_role:
        name: redhat.satellite.content_views
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_content_views:
          - name: cv_rhel7
            repositories:
              - name: Red Hat Enterprise Linux 7 Server RPMs for x86_64 7Server
                product: 'Red Hat Enterprise Linux Server'
              - name: Red Hat Enterprise Linux 7 Server ISOs x86_64 7Server
                product: 'Red Hat Enterprise Linux Server'
              - name: Red Hat Enterprise Linux 7 Server - Optional RPMs x86_64 7Server
                product: 'Red Hat Enterprise Linux Server'
              - name: Red Hat Enterprise Linux 7 Server - Extra RPMs x86_64 7Server
                product: 'Red Hat Enterprise Linux Server'
              - name: Red Hat Enterprise Linux 7 Server Kickstart x86_64 7.9
                product: 'Red Hat Enterprise Linux Server'
              - name: Red Hat Satellite Maintenance 6 for RHEL 7 Server RPMs x86_64
                product: 'Red Hat Enterprise Linux Server'
          - name: ccv_acme_rhel7
            auto_publish: true
            components:
              - content_view: cv_rhel7
                latest: true
      tags:
        - content-view

    - import_role:
        name: redhat.satellite.content_views
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_content_views:
          - name: cv_rhel8
            repositories:
              - name: Red Hat Enterprise Linux 8 for x86_64 - BaseOS RPMs 8
                product: 'Red Hat Enterprise Linux for x86_64'
              - name: Red Hat Enterprise Linux 8 for x86_64 - AppStream RPMs 8
                product: 'Red Hat Enterprise Linux for x86_64'
              - name: Red Hat Satellite Client 6 for RHEL 8 x86_64 RPMs
                product: 'Red Hat Enterprise Linux for x86_64'
          - name: ccv_acme_rhel8
            auto_publish: true
            components:
              - content_view: cv_rhel8
                latest: true
      tags:
        - content-view

    # Creating the content view & composite content view
    - import_role:
        name: redhat.satellite.content_views
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_content_views:
          - name: cv_rhel9
            repositories:
              - name: Red Hat Enterprise Linux 9 for x86_64 - BaseOS RPMs 9
                product: 'Red Hat Enterprise Linux for x86_64'
              - name: Red Hat Enterprise Linux 9 for x86_64 - AppStream RPMs 9
                product: 'Red Hat Enterprise Linux for x86_64'
              - name: Red Hat Satellite Client 6 for RHEL 9 x86_64 RPMs
                product: 'Red Hat Enterprise Linux for x86_64'
          - name: ccv_acme_rhel9
            auto_publish: true
            components:
              - content_view: cv_rhel9
                latest: true
      tags:
        - content-view

    # Publishing CV and CCV
    - import_role:
        name: redhat.satellite.content_view_publish
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_content_views:
          - cv_rhel8
          - cv_rhel9
      tags:
        - publish

    # Waiting for the sync task to finish, let's add here ~ 30 min
    - name: Pause for 3 minutes
      ansible.builtin.pause:
        minutes: 3

    - import_role:
        name: redhat.satellite.content_view_publish
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_content_views:
          - ccv_acme_rhel8
          - ccv_acme_rhel9
      tags:
        - publish

    # Promoting the CCV to Dev/QA/Prod
    - name: "Ensure content view gets promoted to Dev/QA/Prod"
      redhat.satellite.content_view_version:
        organization: "{{ sat_org }}"
        server_url: "https://{{ ansible_facts['nodename'] }}"
        username: "{{ sat_user }}"
        password: "{{ sat_pass }}"
        content_view: "ccv_acme_rhel8"
        lifecycle_environments:
          - Previous
          - Current
      tags:
        - promote

    # Promoting the CCV to Dev/QA/Prod
    - name: "Ensure content view gets promoted to Dev/QA/Prod"
      redhat.satellite.content_view_version:
        organization: "{{ sat_org }}"
        server_url: "https://{{ ansible_facts['nodename'] }}"
        username: "{{ sat_user }}"
        password: "{{ sat_pass }}"
        content_view: "ccv_acme_rhel9"
        lifecycle_environments:
          - Previous
          - Current
      tags:
        - promote

    # Activation Key actions
    - import_role:
        name: redhat.satellite.activation_keys
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_activation_keys:
          - name: "ak_rhel8-prod"
            lifecycle_environment: "Current"
            content_view: "ccv_acme_rhel8"
      tags:
        - ak

    # Activation Key actions
    - import_role:
        name: redhat.satellite.activation_keys
      vars:
        satellite_organization: "{{ sat_org }}"
        satellite_server_url: "https://{{ ansible_facts['nodename'] }}"
        satellite_username: "{{ sat_user }}"
        satellite_password: "{{ sat_pass }}"
        satellite_activation_keys:
          - name: "ak_rhel9-prod"
            lifecycle_environment: "Current"
            content_view: "ccv_acme_rhel9"
      tags:
        - ak